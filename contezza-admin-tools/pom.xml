<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>nl.contezza.adf</groupId>
        <artifactId>contezza-apps</artifactId>
        <version>1.9.4-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

	<artifactId>contezza-admin-tools</artifactId>
	<name>Contezza Admin Tools</name>
	<description>Contezza Admin Tools</description>
	<packaging>war</packaging>

	<properties />

	<build>

		<plugins>

			<!-- Build APP -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>build-dist</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<workingDirectory>${project.parent.basedir}</workingDirectory>
							<executable>./scripts/build.sh</executable>
							<arguments>
								<argument>${project.artifactId}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build WAR -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warSourceDirectory>${project.parent.basedir}/dist/${project.artifactId}</warSourceDirectory>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>

			<!-- Copy Docker -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<nonFilteredFileExtensions> <!-- jpg, jpeg, gif, bmp and png are added automatically -->
						<nonFilteredFileExtension>ftl</nonFilteredFileExtension>
						<nonFilteredFileExtension>acp</nonFilteredFileExtension>
						<nonFilteredFileExtension>svg</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>doc</nonFilteredFileExtension>
						<nonFilteredFileExtension>docx</nonFilteredFileExtension>
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>ppt</nonFilteredFileExtension>
						<nonFilteredFileExtension>pptx</nonFilteredFileExtension>
						<nonFilteredFileExtension>bin</nonFilteredFileExtension>
						<nonFilteredFileExtension>lic</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
						<nonFilteredFileExtension>zip</nonFilteredFileExtension>
						<nonFilteredFileExtension>msg</nonFilteredFileExtension>
						<nonFilteredFileExtension>jar</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						<nonFilteredFileExtension>eot</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						<nonFilteredFileExtension>css</nonFilteredFileExtension>
						<nonFilteredFileExtension>ico</nonFilteredFileExtension>
						<nonFilteredFileExtension>psd</nonFilteredFileExtension>
						<nonFilteredFileExtension>js</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>copy-and-filter-docker-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.parent.basedir}/docker</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/*.jar</exclude>
										<exclude>**/*.so</exclude>
										<exclude>**/*.gz</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-wars-to-dist</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.parent.basedir}/dist</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<filtering>false</filtering>
									<includes>
										<include>**/*.war</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach WAR Artifact -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>attach-documents</id>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}.war</file>
									<type>war</type>
									<classifier>app</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>docker-build-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.maven.plugin.version}</version>
						<configuration>
							<outputDirectory>.docker-build</outputDirectory>
							<images>
								<image>
									<name>${image.name}/${project.artifactId}:${project.version}</name>
									<registry>${image.registry}</registry>
									<build>
										<dockerFileDir>${project.build.directory}/</dockerFileDir>
									</build>
								</image>
								<image>
									<name>${image.name}/${project.artifactId}:${image.tag}</name>
									<registry>${image.registry}</registry>
									<build>
										<dockerFileDir>${project.build.directory}/</dockerFileDir>
									</build>
								</image>
							</images>
							<pushImage>true</pushImage>
							<serverId>${image.registry}</serverId>
							<registryUrl>${image.registry}</registryUrl>
						</configuration>
						<executions>
							<execution>
								<id>build-push-image</id>
								<phase>deploy</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-build-latest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.maven.plugin.version}</version>
						<configuration>
							<outputDirectory>.docker-build</outputDirectory>
							<images>
								<image>
									<name>${image.name}/${project.artifactId}:${image.tag}</name>
									<registry>${image.registry}</registry>
									<build>
										<dockerFileDir>${project.build.directory}/</dockerFileDir>
									</build>
								</image>
							</images>
							<pushImage>true</pushImage>
							<serverId>${image.registry}</serverId>
							<registryUrl>${image.registry}</registryUrl>
						</configuration>
						<executions>
							<execution>
								<id>build-push-image</id>
								<phase>deploy</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>set-version</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<basedir>${project.basedir}</basedir>
							<includes>
								<include>**/*.json</include>
							</includes>
							<replacements>
								<replacement>
									<token>@@project.version@@</token>
									<value>${project.version}</value>
								</replacement>
							</replacements>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
